<UserControl x:Class="TaskTimer.TaskRow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TaskTimer"
             mc:Ignorable="d" 
             d:DesignHeight="51" d:DesignWidth="970" Margin="0,2" RenderTransformOrigin="0.5,0.5">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="20" Width="15" Height="15">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.RenderTransform>
        <TransformGroup>
            <ScaleTransform/>
            <SkewTransform/>
            <RotateTransform/>
            <TranslateTransform/>
        </TransformGroup>
    </UserControl.RenderTransform>
    <Grid Margin="0" ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30*"/>
            <ColumnDefinition Width="269*"/>
            <ColumnDefinition Width="116*"/>
            <ColumnDefinition Width="116*"/>
            <ColumnDefinition Width="123*"/>
            <ColumnDefinition Width="38*"/>
            <ColumnDefinition Width="48*"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>
        <Button x:Name="button" Content="Button" VerticalAlignment="Center" Margin="2,0,3,0" Height="20" Visibility="Hidden"/>
        <ProgressBar x:Name="progressBar" Grid.Column="4" Margin="5,5,0,5" Height="10" VerticalAlignment="Center" Style="{DynamicResource CornerRadius}">
            <ProgressBar.Resources>
                <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF0075FF"/>
                <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
                <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
                <Style x:Key="CornerRadius" TargetType="{x:Type ProgressBar}">
                    <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
                    <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ProgressBar}">
                                <Grid x:Name="TemplateRoot">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Determinate"/>
                                            <VisualState x:Name="Indeterminate">
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Animation">
                                                        <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                                        <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                                        <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                                        <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                                        <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                                    </PointAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="8"/>
                                    <Rectangle x:Name="PART_Track" RadiusX="8" RadiusY="8"/>
                                    <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                                        <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="8" RadiusY="8"/>
                                        <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="8" RadiusY="8">
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Orientation" Value="Vertical">
                                        <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                            <Setter.Value>
                                                <RotateTransform Angle="-90"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="IsIndeterminate" Value="true">
                                        <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ProgressBar.Resources>
        </ProgressBar>
        <TextBox x:Name="taskDesc" Grid.Column="1" Height="20" Margin="0,0,5,0" TextWrapping="Wrap" VerticalAlignment="Center" TextChanged="textBox_TextChanged" MouseDoubleClick="taskDesc_MouseDoubleClick" LostFocus="taskDesc_LostFocus" Background="{x:Null}" FontSize="18" TextAlignment="Justify">
            <TextBox.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </TextBox.LayoutTransform>
        </TextBox>
        <TextBox x:Name="timeSpent" Grid.Column="2" Height="20" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" FontSize="18" MouseDoubleClick="timeSpent_MouseDoubleClick" TextChanged="timeSpent_TextChanged" LostFocus="timeSpent_LostFocus"/>
        <TextBox x:Name="timeGoal" Grid.Column="3" Height="20" Margin="5,0,0,0" TextWrapping="Wrap" VerticalAlignment="Center" TextAlignment="Center" BorderThickness="0" Background="{x:Null}" FontSize="18" MouseDoubleClick="timeGoal_MouseDoubleClick" TextChanged="timeGoal_TextChanged" LostFocus="timeGoal_LostFocus"/>
        <Button x:Name="buttonStart" Content="&gt;" VerticalAlignment="Center" Margin="5,0,3,0" Height="20" Grid.Column="5" Click="buttonStart_Click" FontWeight="Bold"/>
        <Button x:Name="buttonReset" Content="Reset" VerticalAlignment="Center" Margin="2,0" Height="20" Grid.Column="6" Click="buttonReset_Click" FontWeight="Bold"/>
        <Button x:Name="buttonRemove" Content="X" VerticalAlignment="Center" Height="20" Grid.Column="7" Click="buttonRemove_Click" FontWeight="Bold"/>
        <Button x:Name="button1" Content="" Margin="0,0,0,0" Background="#FF173C72" Style="{DynamicResource ButtonStyle1}" Height="31" VerticalAlignment="Center" HorizontalAlignment="Center" Width="30"/>
    </Grid>
</UserControl>
